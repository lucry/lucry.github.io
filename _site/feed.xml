<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>葱葱</title>
    <description>星之所向，无惧无忧。</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 31 May 2017 21:56:42 +0800</pubDate>
    <lastBuildDate>Wed, 31 May 2017 21:56:42 +0800</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>如何在深度系统上配置JDK</title>
        <description>1.在官网上下载JDK：
http://www.oracle.com/technetwork/java/javase/downloads/index.html
2.首先点击连接上方有redio选项同意下载license
3.选择jdk-8u121-linux-x64.tar.gz版本
4.转移JDK（放入/usr/local文件夹下）
sudo mv /usr/local/jdk-8u121-linux-x64.tar.gz/usr/local


5.解压JDK放入/usr/local文件夹
cd /usr/local
sudo tar -zxvf jdk-8u121-linux-x64.tar.gz


6.打开root 权限
sudo su - root


7.配置变量环境
sudo vim /etc/profile


在文件后追加
export JAVA_HOME=/usr/local/jdk1.8.0_121/
export JRE_HOME=/usr/local/jdk1.8.0_121/jre
export LASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib
export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin


退出编辑
按esc，然后输入
: wq


执行以下语句使文件生效
source /etc/profile


8.把安装好的jdk设为默认jdk（root权限）
update-alternatives --install /usr/bin/java java /usr/local/jdk1.8.0_121/bin/java 300
update-alternatives --install /usr/bin/jar jar /usr/local/jdk1.8.0_121/bin/jar 300
update-alternatives --install /usr/bin/javah javah /usr/local/jdk1.8.0_121/bin/javah 300
update-alternatives --install /usr/bin/javap javap /usr/local/jdk1.8.0_121/bin/javap 300
update-alternatives --config java  #注意这里 选择jdk路径为/usr/local/jdk/bin/java为默认jdk


9.验证jdk是否安装成功
java -version


安装成功信息
java version &quot;1.8.0_121&quot;
Java(TM) SE Runtime Environment (build 1.8.0_121-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)


</description>
        <pubDate>Tue, 23 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/project1/2017/05/23/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B7%B1%E5%BA%A6%E7%B3%BB%E7%BB%9F%E4%B8%8A%E9%85%8D%E7%BD%AEJDK/</link>
        <guid isPermaLink="true">http://localhost:4000/project1/2017/05/23/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B7%B1%E5%BA%A6%E7%B3%BB%E7%BB%9F%E4%B8%8A%E9%85%8D%E7%BD%AEJDK/</guid>
        
        <category>JDK1.8.0_121</category>
        
        
        <category>project1</category>
        
      </item>
    
      <item>
        <title>下载jekyll静态博客模板并上传至github</title>
        <description>1.下载一个jekyll静态模板解压；
2.创建一个本地的jekyll文件夹（jekyll_demo）；
3.在终端输入命令进入该文件夹；
cd jekyll_demo


4.初始化git；
 git init


5.创建根节点gh-pages；
git checkout --orphan gh-pages


6.将已下载的模板的全部内容复制进根目录（jekyll_demo）下；
7.修改_config.yml文件内容；

  
    要修改的具体内容：
(此处仅为上传至github使其可以访问的必要部分，其它部分可在使用过程中自定义修改)
      
        将url改为要访问的网址
        baseurl改为根目录
        修改文件中的绝对路径
        修改siteurl
      
    
  


8.把内容添加到本地git库；
git add .
git commit -m &quot;first post&quot;


9.在github上新建一个仓库（这里起名为jekyll_demo）；
10.将本地内容推送至github仓库；
    //将username替换为自己的github用户名

　　$ git remote add origin https://github.com/username/jekyll_demo.git
　　$ git push origin gh-pages


11.访问http://username.github.com/jekyll_demo/即可。（将username替换为自己的github用户名）。
</description>
        <pubDate>Tue, 23 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/project1/2017/05/23/%E4%B8%8B%E8%BD%BDjekyll%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E5%B9%B6%E4%B8%8A%E4%BC%A0%E8%87%B3github/</link>
        <guid isPermaLink="true">http://localhost:4000/project1/2017/05/23/%E4%B8%8B%E8%BD%BDjekyll%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E5%B9%B6%E4%B8%8A%E4%BC%A0%E8%87%B3github/</guid>
        
        <category>jekyll</category>
        
        <category>github</category>
        
        
        <category>project1</category>
        
      </item>
    
  </channel>
</rss>
